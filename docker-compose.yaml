version: '3.8'

services:
  authentication-service:
    build:
      context: ./backend/services/authentication-service
      dockerfile: Dockerfile
    container_name: authentication-service
    restart: always
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://authentication-postgres:5432/authentication_db
      SPRING_DATASOURCE_USERNAME: authentication_user
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_REDIS_HOST: flareye_redis
      SPRING_REDIS_PORT: 6379
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    depends_on:
      - authentication-postgres
      - redis
      - eureka-server
    networks:
      - flareye_network

  authentication-postgres:
    image: postgres:latest
    container_name: authentication_postgres
    restart: always
    environment:
      POSTGRES_DB: authentication_db
      POSTGRES_USER: authentication_user
      POSTGRES_PASSWORD: secret
    ports:
      - "5433:5432"
    networks:
      - flareye_network
    volumes:
      - authentication_postgres_data:/var/lib/postgresql/data
      - ./scripts/services/authentication-service/migrate.sql:/docker-entrypoint-initdb.d/migrate.sql

  redis:
    image: redis:latest
    container_name: flareye_redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - flareye_network

  eureka-server:
    container_name: eureka-server
    build:
      context: ./backend/services/eureka-server
      dockerfile: Dockerfile
    image: eurekaserver:latest
    restart: always
    ports:
      - "8761:8761"
    environment:
      - EUREKA_INSTANCE_HOSTNAME=eureka-server
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
    networks:
      - flareye_network

volumes:
  authentication_postgres_data:

networks:
  flareye_network:
    driver: bridge